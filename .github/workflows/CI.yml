name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: GUI Dependency
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install libx11-dev libxext-dev libxft-dev libxinerama-dev libxcursor-dev libxrender-dev libxfixes-dev libpango1.0-dev libgl1-mesa-dev libglu1-mesa-dev

      - name: Set Variables
        if: matrix.os == 'windows-latest'
        run: |
          echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "OPENSSL_DIR=C:\vcpkg\packages\openssl_x64-windows" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Cache Vcpkg
        if: matrix.os == 'windows-latest'
        uses: actions/cache@v2
        with:
          path: C:\vcpkg\
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install OpenSSL
        if: matrix.os == 'windows-latest'
        run: vcpkg install openssl:x64-windows

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1

      - name: build
        run: cargo build --release --verbose
